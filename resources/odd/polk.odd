<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Polk ODD</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <revisionDesc>
            <change when="2018-05-25Z">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="polk" source="teipublisher.odd"> 
                <elementSpec ident="ref" mode="change">
                    <model predicate="not(@target)" behaviour="inline"/>
                    <model predicate="not(text())" behaviour="link">
                        <param name="content" value="@target"/>
                        <param name="uri" value="@target"/>
                    </model>
                    <model behaviour="link">
                        <param name="link" value="concat('?id=', @target)"/>
                    </model>
                </elementSpec>
            <elementSpec ident="pb" mode="change">
                    <model behaviour="omit">
                        <desc>Override the default pb [break] model</desc>
                    </model>
                    <model behaviour="break" useSourceRendition="true">
                        <desc>A possible place to override the default generation of the '[PAGE ]'. All values are still defaults.</desc>
                        <param name="type" value="'page'"/>
                        <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
                        <outputRendition>
                            display: block; margin-left: 4pt; color: grey; float: right;
                        </outputRendition>
                        <outputRendition scope="before">
                            content: '[Page ';
                        </outputRendition>
                        <outputRendition scope="after">
                            content: ']';
                        </outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="p" mode="change">
                    <model predicate="not(@rend)" behaviour="paragraph" useSourceRendition="true"/>
                    <model predicate="@rend='block'" behaviour="paragraph" useSourceRendition="true"/>
                    <model predicate="@rend='right'" behaviour="paragraph" useSourceRendition="true"/>
                    <model predicate="@rend='center'" behaviour="paragraph" useSourceRendition="true"/>
                    <model predicate="@rend='ledger'" behaviour="paragraph" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="q" mode="change">
                    <model predicate="not(@rend)" behaviour="inline" useSourceRendition="true"/>
                    <model predicate="@rend='block'" behaviour="inline" useSourceRendition="true"/>
                    <model predicate="@rend='right'" behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="date" mode="change">
                    <model output="print" predicate="text()" behaviour="inline"/>
                    <model output="print" predicate="@when and not(text())" behaviour="inline">
                        <param name="content" value="@when"/>
                    </model>
                    <model output="web" predicate="@when" behaviour="inline">
                        <param name="default" value="."/>
                        <param name="alternate" value="@when"/>
                    </model>
                    <model predicate="text()" behaviour="inline"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>